{"version":3,"sources":["components/Header/Header.tsx","components/FilterByType/FilterByType.tsx","components/LineWTotalGraph/LineWTotalGraph.tsx","components/BarLineGraph/BarLineGraph.tsx","components/StackedBarGraph/StackedBarGraph.tsx","components/PyramidGraph/PyramidGraph.tsx","components/BarWTotalGraph/BarWTotalGraph.tsx","components/YearNavigation/YearNavigation.tsx","components/PolarGraph/PolarGraph.tsx","components/MultiBarGraph/MultiBarGraph.tsx","components/GraphCard/GraphCard.tsx","components/GraphCollection/GraphCollection.tsx","components/Footer/Footer.tsx","Data/milesRun.tsx","Data/subscriberCount.tsx","Data/altAssetChallenge.tsx","Data/angelInvestment.tsx","Data/swingTrade.tsx","Data/collectables.tsx","Data/collectablesByMonth.tsx","components/App/App.tsx","index.tsx"],"names":["Header","className","FilterByType","props","map","category","index","buttonClass","typeFilter","onClick","handler","LineWTotalGraph","data","labels","datasets","label","backgroundColor","style","secondDark","borderColor","secondLight","borderWidth","options","scales","x","ticks","color","y","beginAtZero","stepSize","font","size","elements","bar","responsive","plugins","legend","display","position","title","name","total","data2","forEach","number","returnYearTotal","BarLineGraph","type","thirdDark","thirdLight","mainLight","text","StackedBarGraph","stacked","performanceTotal","wins","loses","win","loss","returnPerformanceColor","PyramidGraph","data3","data4","indexAxis","fourthDark","callback","xvalue","tooltip","callbacks","value","Number","formattedValue","replace","positiveOnly","returnString","datasetIndex","toString","cash","assets","length","returnClaytonTotal","returnStephenTotal","BarWTotalGraph","YearNavigation","years","year","yearFilter","PolarGraph","fifthLight","r","grid","backdropColor","MultiBarGraph","data5","returnCollectableTotal","item","defaultYearData","GraphCard","useState","setYearFilter","yearData","setYearData","yearData2","setYearData2","yearData3","setYearData3","yearData4","setYearData4","yearData5","setYearData5","yearData6","setYearData6","updateYearData","inputYear","yearDataFilter","find","data6","useEffect","GraphCollection","graphs","graph","id","Footer","milesRun","mainDark","subscriberCount","altAssetChallenge","fourthLight","fifthDark","angelInvestment","swingTrade","collectables","collectablesByMonth","App","graphCollection","setGraphCollection","setTypeFilter","loading","setLoading","sort","Math","random","filteredGraphs","filter","filterGraphsByType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17080371.chunk.js","sourcesContent":["import './Header.css';\n\nconst Header = () => {\n  return (\n    <header className=\"main_title\">\n      <h1>Clayton Graphs!</h1>\n    </header>\n  )\n}\n\nexport { Header }","import './FilterByType.css';\n\ninterface Iprops {\n  handler: Function;\n  typeFilter: string;\n}\n\nconst FilterByType = (props: Iprops) => {\n\n  const categories: string[] = [\"All\", \"Subscribers\", \"Investments\", \"Collectables\", \"Fitness\", \"Travel\"]\n  return (\n    <section className=\"filter_by_type\">\n      {categories.map((category, index) => {\n        let buttonClass = \"filter_button\";\n        if (category === props.typeFilter) {\n          buttonClass = \"filter_button selected\"\n        }\n        return (\n          <button\n            className={buttonClass}\n            key={index}\n            onClick={() => props.handler(category)}\n          >\n            {category}\n          </button>\n        )\n      })}\n    </section>\n  )\n}\n\nexport { FilterByType }","import { Line } from \"react-chartjs-2\";\nimport \"./LineWTotalGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n}\n\nconst LineWTotalGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Miles Run\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    \n    <article>\n      <h3>Miles Run</h3>\n      <Line data={data} options={options} />\n      <h3>\n        {props.name + \" total: \"}\n        <span className=\"year_total_miles_run\">{returnYearTotal()}</span>\n      </h3>\n    </article>\n  );\n};\n\nexport { LineWTotalGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport './BarLineGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n}\n\nconst BarLineGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Total subs\",\n        type: \"line\",\n        data: props.data2,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"New subs\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      }\n    }\n  };\n\n  return (\n    <article>\n      <h3>Substack Subscribers</h3>\n      <Bar\n        data={data}\n        options={options}  \n      />\n    </article>\n  )\n}\n\nexport { BarLineGraph }","import { useState } from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport './StackedBarGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n}\n\nconst StackedBarGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"winners\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"losers\",\n        data: props.data2,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      }\n    }\n  };\n\n  let performanceTotal = 0;\n\n  const returnPerformanceColor = () => {\n    let total = 0;\n    let wins: any = props.data;\n    let loses: any = props.data2;\n    wins.forEach((win:any) => total += win);\n    loses.forEach((loss:any) => total += loss);\n    performanceTotal = total;\n    if (total > 0) {\n      return \"green\"\n    }\n    return \"red\";\n  }\n\n  return (\n    <article>\n      <h3>Swing Trades</h3>\n      <Bar data={data} options={options} />\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            {props.name} performance: {\" \"} \n            <span className={returnPerformanceColor()}>{performanceTotal}</span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { StackedBarGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport './PyramidGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\nconst PyramidGraph = (props: Iprops) => {\n\n  const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"C Cash\",\n        data: props.data?.map(number => number * -1),\n        backgroundColor: props.style.secondLight,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"C Assets\",\n        data: props.data2?.map(number => number * -1),\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondDark,\n        borderWidth: 1\n      },\n      {\n        label: \"S Cash\",\n        data: props.data3,\n        backgroundColor: props.style.thirdLight,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"S Assets\",\n        data: props.data4,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdDark,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        stacked: true,\n        ticks: {\n          color: props.style.fourthDark,\n          callback: (xvalue: number) => {\n            return xvalue < 0 ? -xvalue : xvalue;\n          }\n        }\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: (label: any) => {\n            let value = Number(label.formattedValue.replace(/,/g, \"\"));\n            let positiveOnly = value < 0 ? -value : value;\n            let returnString = \"\";\n            if (label.datasetIndex === 0) {\n              returnString = `Clayton Cash: $`;\n            } else if (label.datasetIndex === 1) {\n              returnString = `Clayton Assets: $`;\n            } else if (label.datasetIndex === 2) {\n              returnString = `Stephen Cash: $`;\n            } else if (label.datasetIndex === 3) {\n              returnString = `Stephen Assets: $`;\n            }\n            return `${returnString}${positiveOnly.toString()}`;\n          }\n        }\n      }\n    }\n  };\n\n  const returnClaytonTotal = () => {\n    let total = 0;\n    let cash: number[] = props.data;\n    let assets: any = props.data2;\n    total = cash[cash.length - 1] + assets[assets.length - 1];\n    return total;\n  };\n\n  const returnStephenTotal = () => {\n    let total = 0;\n    let cash: any = props.data3;\n    let assets: any = props.data4;\n    total = cash[cash.length - 1] + assets[assets.length - 1];\n    return total;\n  };\n\n  return (\n    <article >\n      <h3>Alt Asset Challenge</h3>\n      <Bar \n        data={data} \n        options={options} \n      />\n      <h4>Current Portfolio Values:</h4>\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            Clayton $<span className=\"clayton_total\">{returnClaytonTotal()}</span>\n          </div>\n          <div>\n            Stephen $<span className=\"stephen_total\">{returnStephenTotal()}</span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { PyramidGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport \"./BarWTotalGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n}\n\nconst BarWTotalGraph = (props: Iprops) => {\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Angel Investments\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: \"\",\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    <article>\n      <h3>Angel Investments</h3>\n      <Bar data={data} options={options} />\n      <h3>\n        {props.name + \" total: \"}\n        <span className=\"year_total\">{returnYearTotal()}</span>\n      </h3>\n    </article>\n  );\n};\n\nexport { BarWTotalGraph };\n","import './YearNavigation.css'\n\ninterface IProps {\n  handler: Function;\n  years: string[];\n  yearFilter: string;\n}\n\nconst YearNavigation = (props: IProps) => {\n  return (\n    <nav>\n      {props.years.map((year, index) => {\n        let buttonClass = \"year_navigation\";\n        if (year === props.yearFilter) {\n          buttonClass = \"year_navigation selected\"\n        }\n        return (\n          <button\n            className={buttonClass}\n            key={index}\n            onClick={() => props.handler(year)}\n          >\n            {year}\n          </button>\n        )\n      })}\n    </nav>\n  )\n}\n\nexport { YearNavigation }","import { PolarArea } from 'react-chartjs-2';\nimport './PolarGraph.css';\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n}\n\nconst PolarGraph = (props: Iprops) => {\n  const data = {\n    labels: [\"Art\", \"Books\", \"Cards\", \"Commics\", \"Movies\"],\n    datasets: [\n      {\n        label: \"Collectables\",\n        data: props.data,\n        backgroundColor: [\n          props.style.secondLight,\n          props.style.thirdLight,\n          props.style.fifthLight,\n          props.style.secondDark,\n          props.style.fourthDark,\n        ],\n        borderColor: props.style.mainLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      r: {\n        grid: {\n          color: \"rgba(255, 255, 255, 0.1)\"\n        },\n        ticks: {\n          color: props.style.mainLight,\n          backdropColor: \"rgba(0,0,0,0)\"\n        }\n      },\n      x: {\n        display: false\n      },\n      y: {\n        display: false\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    <article>\n      <h3>Collectables</h3>\n      <PolarArea data={data} options={options} />\n      <h3>\n        {\"Total collected in \" + props.name + \": \"}\n        <span className=\"polar_year_total\">{returnYearTotal()}</span>\n      </h3>\n    </article>\n  );\n};\n\nexport { PolarGraph }","import { Bar } from \"react-chartjs-2\";\nimport \"./MultiBarGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\nconst MultiBarGraph = (props: Iprops) => {\n  const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Art\",\n        data: props.data,\n        backgroundColor: props.style.secondLight,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Books\",\n        data: props.data2,\n        backgroundColor: props.style.thirdLight,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Cards\",\n        data: props.data3,\n        backgroundColor: props.style.fifthLight,\n        borderColor: props.style.fifthLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Comics\",\n        data: props.data4,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondDark,\n        borderWidth: 1\n      },\n      {\n        label: \"Movies\",\n        data: props.data5,\n        backgroundColor: props.style.fourthDark,\n        borderColor: props.style.fourthDark,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        stacked: false,\n        ticks: {\n          color: props.style.mainLight\n        }\n      },\n      y: {\n        stacked: false,\n        ticks: {\n          stepSize: 2,\n          color: props.style.secondLight,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      },\n      \n    }\n  };\n\n  const returnCollectableTotal = (data: any) => {\n    let total = 0;\n    let collectables: number[] = data;\n    collectables.forEach((item) => total += item)\n    return total;\n  };\n\n  return (\n    <article>\n      <h3>{props.name}</h3>\n      <Bar data={data} options={options} />\n      <h4>Totals Collected:</h4>\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            Art:{\" \"}\n            <span className=\"art_total\">\n              {returnCollectableTotal(props.data)}\n            </span>\n          </div>\n          <div>\n            Books:{\" \"}\n            <span className=\"books_total\">\n              {returnCollectableTotal(props.data2)}\n            </span>\n          </div>\n          <div>\n            Cards:{\" \"}\n            <span className=\"cards_total\">\n              {returnCollectableTotal(props.data3)}\n            </span>\n          </div>\n          <div>\n            Comics:{\" \"}\n            <span className=\"comics_total\">\n              {returnCollectableTotal(props.data4)}\n            </span>\n          </div>\n          <div>\n            Movies:{\" \"}\n            <span className=\"movies_total\">\n              {returnCollectableTotal(props.data5)}\n            </span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { MultiBarGraph };\n","import { useState, useEffect } from 'react';\nimport { LineWTotalGraph } from '../LineWTotalGraph/LineWTotalGraph';\nimport { BarLineGraph } from '../BarLineGraph/BarLineGraph';\nimport { StackedBarGraph } from '../StackedBarGraph/StackedBarGraph';\nimport { PyramidGraph } from '../PyramidGraph/PyramidGraph';\nimport { BarWTotalGraph } from \"../BarWTotalGraph/BarWTotalGraph\";\nimport { YearNavigation } from '../YearNavigation/YearNavigation';\nimport { PolarGraph } from '../PolarGraph/PolarGraph';\nimport { MultiBarGraph } from '../MultiBarGraph/MultiBarGraph';\nimport './GraphCard.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n}\n\nconst defaultYearData = [0];\n\nconst GraphCard = (props:IGraph) => {\n  const [yearFilter, setYearFilter]: [string, (yearFilter: string) => void] = useState(\"2021\");\n\n  const [yearData, setYearData]: [number[], (yearData: number[]) => void] = useState(defaultYearData);\n  const [yearData2, setYearData2]: [number[], (yearData2: number[]) => void] = useState(defaultYearData);\n  const [yearData3, setYearData3]: [number[], (yearData3: number[]) => void] = useState(defaultYearData);\n  const [yearData4, setYearData4]: [number[], (yearData4: number[]) => void] = useState(defaultYearData);\n  const [yearData5, setYearData5]: [number[], (yearData5: number[]) => void] = useState(defaultYearData);\n  const [yearData6, setYearData6]: [number[], (yearData6: number[]) => void] = useState(defaultYearData);\n  \n  const years:string[] = props.data.years.map((year) => {\n    return year.name\n  })\n\n  const updateYearData = (inputYear:string) => {\n    setYearFilter(inputYear);\n    const yearDataFilter: any = props.data.years.find(year => {\n      return year.name === inputYear;\n    });\n    setYearData(yearDataFilter.data);\n    setYearData2(yearDataFilter.data2);\n    setYearData3(yearDataFilter.data3);\n    setYearData4(yearDataFilter.data4);\n    setYearData5(yearDataFilter.data5);\n    setYearData6(yearDataFilter.data6);\n  }\n\n  useEffect(() => {\n    updateYearData(\"2021\");\n  }, [])\n\n  return (\n    <section className=\"graph_card\">\n      {props.name === \"Miles Run\" && (\n        <LineWTotalGraph\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n        />\n      )}\n      {props.name === \"Collectables By Month\" && (\n        <MultiBarGraph\n          name={props.name}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          data3={yearData3}\n          data4={yearData4}\n          data5={yearData5}\n        />\n      )}\n      {props.name === \"Subscriber Count\" && (\n        <BarLineGraph\n          name=\"Substack Subscribers\"\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n        />\n      )}\n      {props.name === \"Alt Asset Challenge\" && (\n        <PyramidGraph\n          name={props.name}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          data3={yearData3}\n          data4={yearData4}\n          data5={yearData5}\n          data6={yearData6}\n        />\n      )}\n      {props.name === \"Angel Investments\" && (\n        <BarWTotalGraph\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n        />\n      )}\n      {props.name === \"Swing Trades\" && (\n        <StackedBarGraph\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n        />\n      )}\n      {props.name === \"Collectables\" && (\n        <PolarGraph\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n        />\n      )}\n      <YearNavigation\n        handler={updateYearData}\n        years={years}\n        yearFilter={yearFilter}\n      />\n    </section>\n  );\n}\n\nexport { GraphCard }","import { GraphCard } from '../GraphCard/GraphCard';\nimport './GraphCollection.css';\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n}\n\ninterface IProps {\n  graphs: IGraph[];\n}\n\nconst GraphCollection = (props: IProps) => {\n\n  const graphs = props.graphs.map(graph => {\n    return (\n      <GraphCard\n        key={graph.id}\n        id={graph.id}\n        name={graph.name}\n        type={graph.type}\n        data={graph.data}\n      />\n    );\n  })\n\n  return (\n    <section className=\"graph_collection\">\n      {graphs.length ? graphs : <h2>No graphs found!</h2>}\n    </section>\n  )\n}\n\nexport { GraphCollection }","const Footer = () => {\n  return (\n    <h5>\n      Get in touch with Clayton! <em>testy@mctest.com</em>\n    </h5>\n  );\n}\n\nexport { Footer }","const milesRun = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#68671A\",\n    thirdLight: \"#A8B163\"\n  },\n  years: [\n    {\n      id: 2017,\n      name: \"2017\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [8, 11, 13, 13, 12, 12, 28, 20, 20, 18, 24, 19],\n      data2: [198]\n    },\n    {\n      id: 2018,\n      name: \"2018\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [28, 31, 23, 23, 22, 22, 38, 30, 30, 38, 34, 39],\n      data2: [358]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [38, 41, 43, 33, 42, 52, 78, 50, 40, 78, 64, 59],\n      data2: [618]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [138, 161, 143, 133, 142, 152, 178, 150, 160, 208, 214, 241],\n      data2: [2020]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [238, 241, 243, 233, 242, 200, 202],\n      data2: [1599]\n    }\n  ]\n};\n\nexport { milesRun }","const subscriberCount = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#EEAE3C\",\n    secondLight: \"#E2BD64\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n  },\n  years: [\n    {\n      id: 2019,\n      name: \"2019\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [1, 0, 2, 1, 3, 1, 0, 0, 4, 3, 2, 4],\n      //     Total subscribers\n      data2: [1, 1, 3, 4, 7, 8, 8, 8, 12, 15, 17, 21]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [3, 3, 2, 1, 0, 1, 1, 3, 4, 3, 4, 2],\n      //     Total subscribers\n      data2: [24, 27, 29, 30, 30, 31, 32, 35, 39, 42, 46, 48]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [5, 4, 3, 3, 5, 6, 4],\n      //     Total subscribers\n      data2: [53, 57, 60, 63, 68, 74, 78]\n    }\n  ]\n};\n\nexport { subscriberCount };\n","const altAssetChallenge = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\",\n  },\n  years: [\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n\n      //     Clayton Cash on Hand\n      data: [1000, 800, 600, 400, 200, 0, 234],\n      //     Clayton Assets Value on Hand\n      data2: [0, 210, 414, 690, 900, 1234, 1008],\n\n      //     Stephen Cash on Hand\n      data3: [1000, 200, 0, 0, 1242, 200, 200],\n      //     Stephen Assets Value on Hand\n      data4: [0, 812, 1038, 1113, 0, 1069, 1014],\n    },\n  ]\n};\n\nexport { altAssetChallenge }","const angelInvestment = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#891a52\",\n    secondLight: \"#B44058\",\n    thirdDark: \"#68671A\",\n    thirdLight: \"#A8B163\"\n  },\n  years: [\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [4, 16, 14, 13, 14, 25, 14, 8, 26, 19, 36, 35],\n      data2: [224]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [38, 41, 43, 33, 56, 52, 38],\n      data2: [268]\n    }\n  ]\n};\n\nexport { angelInvestment };\n","const swingTrade = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\"\n  },\n  years: [\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     winning trades\n      data: [4, 2, 4, 3, 2, 0, 7, 5, 13, 1, 4, 9],\n      //     losing trades\n      data2: [-4, -3, -10, -1, 0, -7, -7, -2, -1, -4, -10, -7]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     winning trades\n      data: [8, 4, 3, 1, 0, 10, 4],\n      //     loosing trades\n      data2: [-1, 0, -1, -6, -2, -4]\n    }\n  ]\n};\n\nexport { swingTrade }","\n\nconst collectables = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\"\n  },\n  years: [\n    {\n      id: 2018,\n      name: \"2018\",\n      //     art, books, cards, comics, movies\n      data: [4, 4, 12, 23, 13],\n      //     total collectables added in year\n      data2: [56]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //     art, books, cards, comics, movies\n      data: [13, 24, 23, 12, 13],\n      //     total collectables added in year\n      data2: [85]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //     art, books, cards, comics, movies\n      data: [14, 21, 27, 4, 23],\n      //     total collectables added in year\n      data2: [89]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     art, books, cards, comics, movies\n      data: [5, 10, 12, 7, 6],\n      //     total collectables added in year\n      data2: [40]\n    }\n  ]\n};   \n\nexport { collectables }","const collectablesByMonth = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\"\n  },\n  years: [\n    {\n      id: 2018,\n      name: \"2018\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [0, 3, 0, 1, 0, 1, 3, 0, 1, 1, 1, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 3, 4, 1, 0, 2, 2, 4, 4, 1, 0, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 2, 0, 1, 1, 3, 1, 1, 1, 1, 1, 1]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 0, 1, 0, 2, 0, 0, 3, 0, 4, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 1, 4, 0, 4, 4, 1, 1, 1, 4, 4, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 3, 1, 0, 1, 2, 1, 1, 1, 3, 0, 0]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 1, 1, 0, 2, 0, 0, 3, 0, 4, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 1, 1, 0, 4, 4, 1, 1, 1, 4, 4, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [2, 3, 1, 0, 1, 2, 1, 1, 1, 3, 4, 4]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 0, 1, 0, 2, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [1, 0, 2, 3, 1, 1, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [1, 2, 3, 4, 2, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 2, 2, 1, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 2, 1, 2, 0, 0, 1],\n    }\n  ]\n};\n\nexport { collectablesByMonth };\n","import { useState, useEffect } from 'react';\nimport { Header } from '../Header/Header'\nimport { FilterByType } from '../FilterByType/FilterByType'\nimport { GraphCollection } from '../GraphCollection/GraphCollection'\nimport { Footer } from '../Footer/Footer'\nimport './App.css';\nimport { milesRun } from '../../Data/milesRun'\nimport { subscriberCount } from '../../Data/subscriberCount'\nimport { altAssetChallenge } from '../../Data/altAssetChallenge'\nimport { angelInvestment } from '../../Data/angelInvestment'\nimport { swingTrade } from '../../Data/swingTrade'\nimport { collectables } from '../../Data/collectables'\nimport { collectablesByMonth } from '../../Data/collectablesByMonth'\n\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n}\n\nconst graphs:IGraph[] = [];\n\nconst App = () => {\n\n  const [graphCollection, setGraphCollection]: [IGraph[], (graphs: IGraph[]) => void] = useState(graphs);\n\n  const [typeFilter, setTypeFilter]: [string, (loading: string) => void] = useState<string>(\"All\");\n\n  const [loading, setLoading]: [boolean, (loading: boolean) => void] = useState<boolean>(true);\n\n  const filterGraphsByType = (): IGraph[] => {\n    let filteredGraphs = graphCollection\n    if (typeFilter !== \"All\") {\n      filteredGraphs = filteredGraphs.filter(graph => {\n        return graph.type === typeFilter\n      })\n    }\n    return filteredGraphs\n  }\n\n  useEffect(() => {\n    let buildGraphs:IGraph[] = [\n      {\n        id: 1,\n        name: \"Miles Run\",\n        type: \"Fitness\",\n        data: milesRun\n      },\n      {\n        id: 2,\n        name: \"Subscriber Count\",\n        type: \"Subscribers\",\n        data: subscriberCount,\n      },\n      {\n        id: 3,\n        name: \"Alt Asset Challenge\",\n        type: \"Investments\",\n        data: altAssetChallenge,\n      },\n      {\n        id: 4,\n        name: \"Angel Investments\",\n        type: \"Investments\",\n        data: angelInvestment,\n      },\n      {\n        id: 5,\n        name: \"Swing Trades\",\n        type: \"Investments\",\n        data: swingTrade,\n      },\n      {\n        id: 6,\n        name: \"Collectables\",\n        type: \"Collectables\",\n        data: collectables,\n      },\n      {\n        id: 7,\n        name: \"Collectables By Month\",\n        type: \"Collectables\",\n        data: collectablesByMonth,\n      }\n    ];\n\n    setGraphCollection(buildGraphs.sort(() => Math.random() - 0.5))  \n    setLoading(false);\n  }, []);\n\n  return (\n    <main className=\"main_body\">\n      <Header />\n      <FilterByType \n        handler={setTypeFilter}\n        typeFilter={typeFilter}\n      />\n      {!loading &&\n        <GraphCollection \n          graphs={filterGraphsByType()}\n        />\n      }\n      <Footer />\n    </main>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}