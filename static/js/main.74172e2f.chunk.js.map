{"version":3,"sources":["assets/claytonGraph.png","components/Header/Header.tsx","components/FilterByType/FilterByType.tsx","components/ClearButton/ClearButton.tsx","components/LineWTotalGraph/LineWTotalGraph.tsx","components/BarLineGraph/BarLineGraph.tsx","components/StackedBarGraph/StackedBarGraph.tsx","components/PyramidGraph/PyramidGraph.tsx","components/BarWTotalGraph/BarWTotalGraph.tsx","components/YearNavigation/YearNavigation.tsx","components/PolarGraph/PolarGraph.tsx","components/MultiBarGraph/MultiBarGraph.tsx","components/GraphCard/GraphCard.tsx","components/GraphCollection/GraphCollection.tsx","components/Footer/Footer.tsx","data/milesRun.tsx","data/subscriberCount.tsx","data/altAssetChallenge.tsx","data/angelInvestment.tsx","data/swingTrade.tsx","data/collectables.tsx","data/collectablesByMonth.tsx","components/App/App.tsx","index.tsx"],"names":["Header","console","log","className","src","claytonGraph","alt","FilterByType","props","map","category","index","buttonClass","typeFilter","onClick","handler","ClearButton","LineWTotalGraph","data","labels","datasets","label","backgroundColor","style","secondDark","borderColor","secondLight","borderWidth","options","scales","x","ticks","color","y","beginAtZero","stepSize","font","size","elements","bar","responsive","plugins","legend","display","position","title","updateId","id","name","total","data2","forEach","number","returnYearTotal","BarLineGraph","type","thirdDark","thirdLight","mainLight","text","StackedBarGraph","stacked","performanceTotal","wins","loses","win","loss","returnPerformanceColor","PyramidGraph","data3","data4","indexAxis","fourthDark","callback","xvalue","tooltip","callbacks","value","Number","formattedValue","replace","positiveOnly","returnString","datasetIndex","toString","cash","assets","length","returnClaytonTotal","returnStephenTotal","BarWTotalGraph","YearNavigation","years","year","yearFilter","PolarGraph","fifthLight","r","grid","backdropColor","MultiBarGraph","data5","returnCollectableTotal","item","defaultYearData","GraphCard","useState","setYearFilter","yearData","setYearData","yearData2","setYearData2","yearData3","setYearData3","yearData4","setYearData4","yearData5","setYearData5","yearData6","setYearData6","updateYearData","inputYear","yearDataFilter","find","data6","useEffect","GraphCollection","graphs","graph","Footer","milesRun","mainDark","subscriberCount","altAssetChallenge","fourthLight","fifthDark","angelInvestment","swingTrade","collectables","collectablesByMonth","App","graphCollection","setGraphCollection","setTypeFilter","idFilter","setIdFilter","loading","setLoading","sort","Math","random","filteredGraphs","filter","filterGraphsByType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74172e2f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/claytonGraph.c848ab8f.png\";","import './Header.css';\nimport claytonGraph from '../../assets/claytonGraph.png'\n\nconst Header = () => {\n\n  const titleImage = `images/claytonGraph.png`;\n  console.log(titleImage)\n\n  return (\n    <header className=\"main_title\">\n      <img \n        className=\"title_image\"\n        src={claytonGraph}\n        alt=\"Clayton Graph\" \n      />\n    </header>\n  )\n}\n\nexport { Header }","import './FilterByType.css';\n\ninterface Iprops {\n  handler: Function;\n  typeFilter: string;\n}\n\nconst FilterByType = (props: Iprops) => {\n\n  const categories: string[] = [\"All\", \"Subscribers\", \"Investments\", \"Collectables\", \"Fitness\", \"Travel\"]\n  return (\n    <section className=\"filter_by_type\">\n      {categories.map((category, index) => {\n        let buttonClass = \"filter_button\";\n        if (category === props.typeFilter) {\n          buttonClass = \"filter_button selected\"\n        }\n        return (\n          <button\n            className={buttonClass}\n            key={index}\n            onClick={() => props.handler(category)}\n          >\n            {category}\n          </button>\n        )\n      })}\n    </section>\n  )\n}\n\nexport { FilterByType }","import './ClearButton.css'\n\ninterface Iprops {\n  handler: Function;\n}\n\nconst ClearButton = (props: Iprops) => {\n  return (\n    <section className=\"filter_by_type\">\n          <button\n            className=\"clear_button\"\n            onClick={() => props.handler(0)}\n          >\n            go back\n          </button>\n    </section>\n  );\n};\n\nexport { ClearButton };\n","import { Line } from \"react-chartjs-2\";\nimport \"./LineWTotalGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n  updateId: Function;\n}\n\nconst LineWTotalGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Miles Run\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Miles Run</h3>\n      <Line data={data} options={options} />\n      <h4>\n        {props.name + \" total: \"}\n        <span className=\"year_total_miles_run\">{returnYearTotal()}</span>\n      </h4>\n    </article>\n  );\n};\n\nexport { LineWTotalGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport './BarLineGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n  updateId: Function;\n}\n\nconst BarLineGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Total subs\",\n        type: \"line\",\n        data: props.data2,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"New subs\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      }\n    }\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Substack Subscribers</h3>\n      <Bar data={data} options={options} />\n    </article>\n  );\n}\n\nexport { BarLineGraph }","import { useState } from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport './StackedBarGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n  updateId: Function;\n}\n\nconst StackedBarGraph = (props: Iprops) => {\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"winners\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"losers\",\n        data: props.data2,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      }\n    }\n  };\n\n  let performanceTotal = 0;\n\n  const returnPerformanceColor = () => {\n    let total = 0;\n    let wins: any = props.data;\n    let loses: any = props.data2;\n    wins.forEach((win:any) => total += win);\n    loses.forEach((loss:any) => total += loss);\n    performanceTotal = total;\n    if (total > 0) {\n      return \"green\"\n    }\n    return \"red\";\n  }\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Swing Trades</h3>\n      <Bar data={data} options={options} />\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            {props.name} performance:{\" \"}\n            <span className={returnPerformanceColor()}>{performanceTotal}</span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { StackedBarGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport './PyramidGraph.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n  updateId: Function;\n}\n\nconst PyramidGraph = (props: Iprops) => {\n\n  const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"C Cash\",\n        data: props.data?.map(number => number * -1),\n        backgroundColor: props.style.secondLight,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"C Assets\",\n        data: props.data2?.map(number => number * -1),\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondDark,\n        borderWidth: 1\n      },\n      {\n        label: \"S Cash\",\n        data: props.data3,\n        backgroundColor: props.style.thirdLight,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"S Assets\",\n        data: props.data4,\n        backgroundColor: props.style.thirdDark,\n        borderColor: props.style.thirdDark,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        stacked: true,\n        ticks: {\n          color: props.style.fourthDark,\n          callback: (xvalue: number) => {\n            return xvalue < 0 ? -xvalue : xvalue;\n          }\n        }\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          color: props.style.secondLight,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: (label: any) => {\n            let value = Number(label.formattedValue.replace(/,/g, \"\"));\n            let positiveOnly = value < 0 ? -value : value;\n            let returnString = \"\";\n            if (label.datasetIndex === 0) {\n              returnString = `Clayton Cash: $`;\n            } else if (label.datasetIndex === 1) {\n              returnString = `Clayton Assets: $`;\n            } else if (label.datasetIndex === 2) {\n              returnString = `Stephen Cash: $`;\n            } else if (label.datasetIndex === 3) {\n              returnString = `Stephen Assets: $`;\n            }\n            return `${returnString}${positiveOnly.toString()}`;\n          }\n        }\n      }\n    }\n  };\n\n  const returnClaytonTotal = () => {\n    let total = 0;\n    let cash: number[] = props.data;\n    let assets: any = props.data2;\n    total = cash[cash.length - 1] + assets[assets.length - 1];\n    return total;\n  };\n\n  const returnStephenTotal = () => {\n    let total = 0;\n    let cash: any = props.data3;\n    let assets: any = props.data4;\n    total = cash[cash.length - 1] + assets[assets.length - 1];\n    return total;\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Alt Asset Challenge</h3>\n      <Bar data={data} options={options} />\n      <h4>Current Portfolio Values:</h4>\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            Clayton $\n            <span className=\"clayton_total\">{returnClaytonTotal()}</span>\n          </div>\n          <div>\n            Stephen $\n            <span className=\"stephen_total\">{returnStephenTotal()}</span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { PyramidGraph };\n","import { Bar } from \"react-chartjs-2\";\nimport \"./BarWTotalGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  data: number[];\n  data2?: number[];\n  type: string;\n  updateId: Function;\n}\n\nconst BarWTotalGraph = (props: Iprops) => {\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Angel Investments\",\n        data: props.data,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: props.style.secondLight\n        }\n      },\n      y: {\n        ticks: {\n          color: props.style.secondLight,\n          stepSize: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: \"\",\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Angel Investments</h3>\n      <Bar data={data} options={options} />\n      <h4>\n        {props.name + \" total: \"}\n        <span className=\"year_total\">{returnYearTotal()}</span>\n      </h4>\n    </article>\n  );\n};\n\nexport { BarWTotalGraph };\n","import './YearNavigation.css'\n\ninterface IProps {\n  handler: Function;\n  years: string[];\n  yearFilter: string;\n}\n\nconst YearNavigation = (props: IProps) => {\n  return (\n    <nav>\n      {props.years.map((year, index) => {\n        let buttonClass = \"year_navigation\";\n        if (year === props.yearFilter) {\n          buttonClass = \"year_navigation selected\"\n        }\n        return (\n          <button\n            className={buttonClass}\n            key={index}\n            onClick={() => props.handler(year)}\n          >\n            {year}\n          </button>\n        )\n      })}\n    </nav>\n  )\n}\n\nexport { YearNavigation }","import { PolarArea } from 'react-chartjs-2';\nimport './PolarGraph.css';\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n  updateId: Function;\n}\n\nconst PolarGraph = (props: Iprops) => {\n  const data = {\n    labels: [\"Art\", \"Books\", \"Cards\", \"Commics\", \"Movies\"],\n    datasets: [\n      {\n        label: \"Collectables\",\n        data: props.data,\n        backgroundColor: [\n          props.style.secondLight,\n          props.style.thirdLight,\n          props.style.fifthLight,\n          props.style.secondDark,\n          props.style.fourthDark,\n        ],\n        borderColor: props.style.mainLight,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      r: {\n        grid: {\n          color: \"rgba(255, 255, 255, 0.1)\"\n        },\n        ticks: {\n          color: props.style.mainLight,\n          backdropColor: \"rgba(0,0,0,0)\"\n        }\n      },\n      x: {\n        display: false\n      },\n      y: {\n        display: false\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n\n  const returnYearTotal = () => {\n    let total = 0;\n    props.data2?.forEach(number => {\n      total += number;\n    });\n    return total;\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>Collectables</h3>\n      <PolarArea data={data} options={options} />\n      <h4>\n        {\"Total collected in \" + props.name + \": \"}\n        <span className=\"polar_year_total\">{returnYearTotal()}</span>\n      </h4>\n    </article>\n  );\n};\n\nexport { PolarGraph }","import { Bar } from \"react-chartjs-2\";\nimport \"./MultiBarGraph.css\";\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface Iprops {\n  id: number;\n  style: IStyle;\n  name: string;\n  type: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n  updateId: Function;\n}\n\nconst MultiBarGraph = (props: Iprops) => {\n  const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Art\",\n        data: props.data,\n        backgroundColor: props.style.secondLight,\n        borderColor: props.style.secondLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Books\",\n        data: props.data2,\n        backgroundColor: props.style.thirdLight,\n        borderColor: props.style.thirdLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Cards\",\n        data: props.data3,\n        backgroundColor: props.style.fifthLight,\n        borderColor: props.style.fifthLight,\n        borderWidth: 1\n      },\n      {\n        label: \"Comics\",\n        data: props.data4,\n        backgroundColor: props.style.secondDark,\n        borderColor: props.style.secondDark,\n        borderWidth: 1\n      },\n      {\n        label: \"Movies\",\n        data: props.data5,\n        backgroundColor: props.style.fourthDark,\n        borderColor: props.style.fourthDark,\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        stacked: false,\n        ticks: {\n          color: props.style.mainLight\n        }\n      },\n      y: {\n        stacked: false,\n        ticks: {\n          stepSize: 2,\n          color: props.style.secondLight,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        display: false,\n        color: props.style.mainLight,\n        text: props.name,\n        font: {\n          size: 18\n        }\n      },\n      \n    }\n  };\n\n  const returnCollectableTotal = (data: any) => {\n    let total = 0;\n    let collectables: number[] = data;\n    collectables.forEach((item) => total += item)\n    return total;\n  };\n\n  return (\n    <article>\n      <h3 onClick={() => props.updateId(props.id)}>{props.name}</h3>\n      <Bar data={data} options={options} />\n      <h4>Totals Collected:</h4>\n      <h4 className=\"alt_totals\">\n        <section className=\"section_totals\">\n          <div>\n            Art:{\" \"}\n            <span className=\"art_total\">\n              {returnCollectableTotal(props.data)}\n            </span>\n          </div>\n          <div>\n            Books:{\" \"}\n            <span className=\"books_total\">\n              {returnCollectableTotal(props.data2)}\n            </span>\n          </div>\n          <div>\n            Cards:{\" \"}\n            <span className=\"cards_total\">\n              {returnCollectableTotal(props.data3)}\n            </span>\n          </div>\n          <div>\n            Comics:{\" \"}\n            <span className=\"comics_total\">\n              {returnCollectableTotal(props.data4)}\n            </span>\n          </div>\n          <div>\n            Movies:{\" \"}\n            <span className=\"movies_total\">\n              {returnCollectableTotal(props.data5)}\n            </span>\n          </div>\n        </section>\n      </h4>\n    </article>\n  );\n};\n\nexport { MultiBarGraph };\n","import { useState, useEffect } from 'react';\nimport { LineWTotalGraph } from '../LineWTotalGraph/LineWTotalGraph';\nimport { BarLineGraph } from '../BarLineGraph/BarLineGraph';\nimport { StackedBarGraph } from '../StackedBarGraph/StackedBarGraph';\nimport { PyramidGraph } from '../PyramidGraph/PyramidGraph';\nimport { BarWTotalGraph } from \"../BarWTotalGraph/BarWTotalGraph\";\nimport { YearNavigation } from '../YearNavigation/YearNavigation';\nimport { PolarGraph } from '../PolarGraph/PolarGraph';\nimport { MultiBarGraph } from '../MultiBarGraph/MultiBarGraph';\nimport './GraphCard.css'\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n  updateId: Function;\n}\n\nconst defaultYearData = [0];\n\nconst GraphCard = (props:IGraph) => {\n  const [yearFilter, setYearFilter]: [string, (yearFilter: string) => void] = useState(\"2021\");\n\n  const [yearData, setYearData]: [number[], (yearData: number[]) => void] = useState(defaultYearData);\n  const [yearData2, setYearData2]: [number[], (yearData2: number[]) => void] = useState(defaultYearData);\n  const [yearData3, setYearData3]: [number[], (yearData3: number[]) => void] = useState(defaultYearData);\n  const [yearData4, setYearData4]: [number[], (yearData4: number[]) => void] = useState(defaultYearData);\n  const [yearData5, setYearData5]: [number[], (yearData5: number[]) => void] = useState(defaultYearData);\n  const [yearData6, setYearData6]: [number[], (yearData6: number[]) => void] = useState(defaultYearData);\n  \n  const years:string[] = props.data.years.map((year) => {\n    return year.name\n  })\n\n  const updateYearData = (inputYear:string) => {\n    setYearFilter(inputYear);\n    const yearDataFilter: any = props.data.years.find(year => {\n      return year.name === inputYear;\n    });\n    setYearData(yearDataFilter.data);\n    setYearData2(yearDataFilter.data2);\n    setYearData3(yearDataFilter.data3);\n    setYearData4(yearDataFilter.data4);\n    setYearData5(yearDataFilter.data5);\n    setYearData6(yearDataFilter.data6);\n  }\n\n  useEffect(() => {\n    updateYearData(\"2021\");\n  }, [])\n\n  return (\n    <section className=\"graph_card\">\n      {props.name === \"Miles Run\" && (\n        <LineWTotalGraph\n          id={props.id}\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Collectables By Month\" && (\n        <MultiBarGraph\n          id={props.id}\n          name={props.name}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          data3={yearData3}\n          data4={yearData4}\n          data5={yearData5}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Subscriber Count\" && (\n        <BarLineGraph\n          id={props.id}\n          name=\"Substack Subscribers\"\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Alt Asset Challenge\" && (\n        <PyramidGraph\n          id={props.id}\n          name={props.name}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          data3={yearData3}\n          data4={yearData4}\n          data5={yearData5}\n          data6={yearData6}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Angel Investments\" && (\n        <BarWTotalGraph\n          id={props.id}\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Swing Trades\" && (\n        <StackedBarGraph\n          id={props.id}\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          updateId={props.updateId}\n        />\n      )}\n      {props.name === \"Collectables\" && (\n        <PolarGraph\n          id={props.id}\n          name={yearFilter}\n          type={props.type}\n          style={props.data.style}\n          data={yearData}\n          data2={yearData2}\n          updateId={props.updateId}\n        />\n      )}\n      <YearNavigation\n        handler={updateYearData}\n        years={years}\n        yearFilter={yearFilter}\n      />\n    </section>\n  );\n}\n\nexport { GraphCard }","import { GraphCard } from '../GraphCard/GraphCard';\nimport './GraphCollection.css';\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n}\n\ninterface IProps {\n  graphs: IGraph[];\n  updateId: Function;\n}\n\nconst GraphCollection = (props: IProps) => {\n\n  const graphs = props.graphs.map(graph => {\n    return (\n      <GraphCard\n        key={graph.id}\n        id={graph.id}\n        name={graph.name}\n        type={graph.type}\n        data={graph.data}\n        updateId={props.updateId}\n      />\n    );\n  })\n\n  return (\n    <section className=\"graph_collection\">\n      {graphs.length ? graphs : <h2>No graphs found!</h2>}\n    </section>\n  )\n}\n\nexport { GraphCollection }","const Footer = () => {\n  return (\n    <h5>\n      Get in touch with Clayton! <em>testy@mctest.com</em>\n    </h5>\n  );\n}\n\nexport { Footer }","const milesRun = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#68671A\",\n    thirdLight: \"#A8B163\"\n  },\n  years: [\n    {\n      id: 2017,\n      name: \"2017\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [8, 11, 13, 13, 12, 12, 28, 20, 20, 18, 24, 19],\n      data2: [198]\n    },\n    {\n      id: 2018,\n      name: \"2018\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [28, 31, 23, 23, 22, 22, 38, 30, 30, 38, 34, 39],\n      data2: [358]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [38, 41, 43, 33, 42, 52, 78, 50, 40, 78, 64, 59],\n      data2: [618]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [138, 161, 143, 133, 142, 152, 178, 150, 160, 208, 214, 241],\n      data2: [2020]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [238, 241, 243, 233, 242, 200, 202],\n      data2: [1599]\n    }\n  ]\n};\n\nexport { milesRun }","const subscriberCount = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#EEAE3C\",\n    secondLight: \"#E2BD64\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n  },\n  years: [\n    {\n      id: 2019,\n      name: \"2019\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [1, 0, 2, 1, 3, 1, 0, 0, 4, 3, 2, 4],\n      //     Total subscribers\n      data2: [1, 1, 3, 4, 7, 8, 8, 8, 12, 15, 17, 21]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [3, 3, 2, 1, 0, 1, 1, 3, 4, 3, 4, 2],\n      //     Total subscribers\n      data2: [24, 27, 29, 30, 30, 31, 32, 35, 39, 42, 46, 48]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     New subscribers\n      data: [5, 4, 3, 3, 5, 6, 4],\n      //     Total subscribers\n      data2: [53, 57, 60, 63, 68, 74, 78]\n    }\n  ]\n};\n\nexport { subscriberCount };\n","const altAssetChallenge = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\",\n  },\n  years: [\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n\n      //     Clayton Cash on Hand\n      data: [1000, 800, 600, 400, 200, 0, 234],\n      //     Clayton Assets Value on Hand\n      data2: [0, 210, 414, 690, 900, 1234, 1008],\n\n      //     Stephen Cash on Hand\n      data3: [1000, 200, 0, 0, 1242, 200, 200],\n      //     Stephen Assets Value on Hand\n      data4: [0, 812, 1038, 1113, 0, 1069, 1014],\n    },\n  ]\n};\n\nexport { altAssetChallenge }","const angelInvestment = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#891a52\",\n    secondLight: \"#B44058\",\n    thirdDark: \"#68671A\",\n    thirdLight: \"#A8B163\"\n  },\n  years: [\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [4, 16, 14, 13, 14, 25, 14, 8, 26, 19, 36, 35],\n      data2: [224]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      data: [38, 41, 43, 33, 56, 52, 38],\n      data2: [268]\n    }\n  ]\n};\n\nexport { angelInvestment };\n","const swingTrade = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\"\n  },\n  years: [\n    {\n      id: 2020,\n      name: \"2020\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     winning trades\n      data: [4, 2, 4, 3, 2, 0, 7, 5, 13, 1, 4, 9],\n      //     losing trades\n      data2: [-4, -3, -10, -1, 0, -7, -7, -2, -1, -4, -10, -7]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //     winning trades\n      data: [8, 4, 3, 1, 0, 10, 4],\n      //     loosing trades\n      data2: [-1, 0, -1, -6, -2, -4]\n    }\n  ]\n};\n\nexport { swingTrade }","\n\nconst collectables = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\"\n  },\n  years: [\n    {\n      id: 2018,\n      name: \"2018\",\n      //     art, books, cards, comics, movies\n      data: [4, 4, 12, 23, 13],\n      //     total collectables added in year\n      data2: [56]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //     art, books, cards, comics, movies\n      data: [13, 24, 23, 12, 13],\n      //     total collectables added in year\n      data2: [85]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //     art, books, cards, comics, movies\n      data: [14, 21, 27, 4, 23],\n      //     total collectables added in year\n      data2: [89]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //     art, books, cards, comics, movies\n      data: [5, 10, 12, 7, 6],\n      //     total collectables added in year\n      data2: [40]\n    }\n  ]\n};   \n\nexport { collectables }","const collectablesByMonth = {\n  style: {\n    mainDark: \"#27201A\",\n    mainLight: \"#CBBE8F\",\n    secondDark: \"#68671A\",\n    secondLight: \"#A8B163\",\n    thirdDark: \"#DF4239\",\n    thirdLight: \"#F99D5C\",\n    fourthDark: \"#EEAE3C\",\n    fourthLight: \"#E2BD64\",\n    fifthDark: \"#891A52\",\n    fifthLight: \"#B44058\"\n  },\n  years: [\n    {\n      id: 2018,\n      name: \"2018\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [0, 3, 0, 1, 0, 1, 3, 0, 1, 1, 1, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 3, 4, 1, 0, 2, 2, 4, 4, 1, 0, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 2, 0, 1, 1, 3, 1, 1, 1, 1, 1, 1]\n    },\n    {\n      id: 2019,\n      name: \"2019\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 0, 1, 0, 2, 0, 0, 3, 0, 4, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 1, 4, 0, 4, 4, 1, 1, 1, 4, 4, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 3, 1, 0, 1, 2, 1, 1, 1, 3, 0, 0]\n    },\n    {\n      id: 2020,\n      name: \"2020\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 1, 1, 0, 2, 0, 0, 3, 0, 4, 1],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [0, 1, 1, 0, 4, 4, 1, 1, 1, 4, 4, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [2, 3, 1, 0, 1, 2, 1, 1, 1, 3, 4, 4]\n    },\n    {\n      id: 2021,\n      name: \"2021\",\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Art\n      data: [0, 2, 0, 1, 0, 2, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Books\n      data2: [1, 0, 2, 3, 1, 1, 2],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Cards\n      data3: [1, 2, 3, 4, 2, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Comics\n      data4: [2, 2, 2, 1, 0, 0, 0],\n      //           jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec\n      //          Movies\n      data5: [0, 2, 1, 2, 0, 0, 1],\n    }\n  ]\n};\n\nexport { collectablesByMonth };\n","import { useState, useEffect } from 'react';\nimport { Header } from '../Header/Header'\nimport { FilterByType } from '../FilterByType/FilterByType'\nimport { ClearButton } from '../ClearButton/ClearButton'\nimport { GraphCollection } from '../GraphCollection/GraphCollection'\nimport { Footer } from '../Footer/Footer'\nimport './App.css';\nimport { milesRun } from '../../data/milesRun'\nimport { subscriberCount } from '../../data/subscriberCount'\nimport { altAssetChallenge } from '../../data/altAssetChallenge'\nimport { angelInvestment } from '../../data/angelInvestment'\nimport { swingTrade } from '../../data/swingTrade'\nimport { collectables } from '../../data/collectables'\nimport { collectablesByMonth } from '../../data/collectablesByMonth'\n\ninterface ISingleYear {\n  id: number;\n  name: string;\n  data: number[];\n  data2?: number[];\n  data3?: number[];\n  data4?: number[];\n  data5?: number[];\n  data6?: number[];\n}\n\ninterface IStyle {\n  mainDark: string;\n  mainLight: string;\n  secondDark: string;\n  secondLight: string;\n  thirdDark: string;\n  thirdLight: string;\n  fourthDark?: string;\n  fourthLight?: string;\n  fifthDark?: string;\n  fifthLight?: string;\n}\n\ninterface IData {\n  style: IStyle;\n  years: ISingleYear[];\n}\n\ninterface IGraph {\n  id: number;\n  name: string;\n  type: string;\n  data: IData;\n}\n\nconst graphs:IGraph[] = [];\n\nconst App = () => {\n\n  const [graphCollection, setGraphCollection]: [IGraph[], (graphs: IGraph[]) => void] = useState(graphs);\n\n  const [typeFilter, setTypeFilter]: [string, (loading: string) => void] = useState<string>(\"All\");\n\n  const [idFilter, setIdFilter]: [number, (loading: number) => void] = useState<number>(0);\n\n  const [loading, setLoading]: [boolean, (loading: boolean) => void] = useState<boolean>(true);\n\n  const filterGraphsByType = (): IGraph[] => {\n    let filteredGraphs = graphCollection\n    if (typeFilter !== \"All\") {\n      filteredGraphs = filteredGraphs.filter(graph => {\n        return graph.type === typeFilter\n      })\n    }\n    if (idFilter !== 0) {\n      filteredGraphs = filteredGraphs.filter(graph => {\n        return graph.id === idFilter\n      })\n    }\n    return filteredGraphs\n  }\n\n  useEffect(() => {\n    let buildGraphs:IGraph[] = [\n      {\n        id: 1,\n        name: \"Miles Run\",\n        type: \"Fitness\",\n        data: milesRun,\n      },\n      {\n        id: 2,\n        name: \"Subscriber Count\",\n        type: \"Subscribers\",\n        data: subscriberCount,\n      },\n      {\n        id: 3,\n        name: \"Alt Asset Challenge\",\n        type: \"Investments\",\n        data: altAssetChallenge,\n      },\n      {\n        id: 4,\n        name: \"Angel Investments\",\n        type: \"Investments\",\n        data: angelInvestment,\n      },\n      {\n        id: 5,\n        name: \"Swing Trades\",\n        type: \"Investments\",\n        data: swingTrade,\n      },\n      {\n        id: 6,\n        name: \"Collectables\",\n        type: \"Collectables\",\n        data: collectables,\n      },\n      {\n        id: 7,\n        name: \"Collectables By Month\",\n        type: \"Collectables\",\n        data: collectablesByMonth,\n      }\n    ];\n\n    setGraphCollection(buildGraphs.sort(() => Math.random() - 0.5))  \n    setLoading(false);\n  }, []);\n\n  return (\n    <main className=\"main_body\">\n      <Header />\n      {idFilter === 0 ? \n        <FilterByType \n          handler={setTypeFilter}\n          typeFilter={typeFilter}\n        />\n        :\n        <ClearButton\n          handler={setIdFilter}\n        />\n      }\n      {!loading &&\n        <GraphCollection \n          graphs={filterGraphsByType()}\n          updateId={setIdFilter}\n        />\n      }\n      <Footer />\n    </main>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}